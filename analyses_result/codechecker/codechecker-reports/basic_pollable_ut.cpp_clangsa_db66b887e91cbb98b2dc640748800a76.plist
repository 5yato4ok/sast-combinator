<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>diagnostics</key>
	<array>
		<dict>
			<key>category</key>
			<string>C++ object lifecycle</string>
			<key>check_name</key>
			<string>optin.cplusplus.VirtualCall</string>
			<key>description</key>
			<string>Call to virtual method 'TestPollable::stopWhileInAioThread' during destruction bypasses virtual dispatch</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>e72698da793943ca24186f5a164792a2</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>13</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>32</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>static_assert (sizeof ("PerformanceBasicPollableDispatch")&gt;1,"test_suite_name must not be empty");static_assert (sizeof ("regularPollSet")&gt;1,"test_name must not be empty");class PerformanceBasicPollableDispatch_regularPollSet_Test :public PerformanceBasicPollableDispatch {public :PerformanceBasicPollableDispatch_regularPollSet_Test ()=default ;~PerformanceBasicPollableDispatch_regularPollSet_Test ()override =default ;PerformanceBasicPollableDispatch_regularPollSet_Test (const PerformanceBasicPollableDispatch_regularPollSet_Test &amp;)=delete ;PerformanceBasicPollableDispatch_regularPollSet_Test &amp;operator =(const PerformanceBasicPollableDispatch_regularPollSet_Test &amp;)=delete ;PerformanceBasicPollableDispatch_regularPollSet_Test (PerformanceBasicPollableDispatch_regularPollSet_Test &amp;&amp;)noexcept =delete ;PerformanceBasicPollableDispatch_regularPollSet_Test &amp;operator =(PerformanceBasicPollableDispatch_regularPollSet_Test &amp;&amp;)noexcept =delete ;private :void TestBody ()override ;[[maybe_unused ]]static ::testing ::TestInfo *const test_info_ ;};::testing ::TestInfo *const PerformanceBasicPollableDispatch_regularPollSet_Test ::test_info_ =::testing ::internal ::MakeAndRegisterTestInfo ("PerformanceBasicPollableDispatch","regularPollSet",nullptr ,nullptr ,::testing ::internal ::CodeLocation ("/home/misha/nika/nx_open/libs/nx_network/unit_tests/src/aio/basic_pollable_ut.cpp",331),(::testing ::internal ::GetTypeId &lt;PerformanceBasicPollableDispatch &gt;()),::testing ::internal ::SuiteApiResolver &lt;PerformanceBasicPollableDispatch &gt;::GetSetUpCaseOrSuite ("/home/misha/nika/nx_open/libs/nx_network/unit_tests/src/aio/basic_pollable_ut.cpp",331),::testing ::internal ::SuiteApiResolver &lt;PerformanceBasicPollableDispatch &gt;::GetTearDownCaseOrSuite ("/home/misha/nika/nx_open/libs/nx_network/unit_tests/src/aio/basic_pollable_ut.cpp",331),new ::testing ::internal ::TestFactoryImpl &lt;PerformanceBasicPollableDispatch_regularPollSet_Test &gt;);void PerformanceBasicPollableDispatch_regularPollSet_Test ::TestBody ()</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>331</integer>
					</dict>
					<key>name</key>
					<string>TEST_F(PerformanceBasicPollableDispatch, regularPollSet)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>static_assert (sizeof ("PerformanceBasicPollableDispatch")&gt;1,"test_suite_name must not be empty");static_assert (sizeof ("regularPollSet")&gt;1,"test_name must not be empty");class PerformanceBasicPollableDispatch_regularPollSet_Test :public PerformanceBasicPollableDispatch {public :PerformanceBasicPollableDispatch_regularPollSet_Test ()=default ;~PerformanceBasicPollableDispatch_regularPollSet_Test ()override =default ;PerformanceBasicPollableDispatch_regularPollSet_Test (const PerformanceBasicPollableDispatch_regularPollSet_Test &amp;)=delete ;PerformanceBasicPollableDispatch_regularPollSet_Test &amp;operator =(const PerformanceBasicPollableDispatch_regularPollSet_Test &amp;)=delete ;PerformanceBasicPollableDispatch_regularPollSet_Test (PerformanceBasicPollableDispatch_regularPollSet_Test &amp;&amp;)noexcept =delete ;PerformanceBasicPollableDispatch_regularPollSet_Test &amp;operator =(PerformanceBasicPollableDispatch_regularPollSet_Test &amp;&amp;)noexcept =delete ;private :void TestBody ()override ;[[maybe_unused ]]static ::testing ::TestInfo *const test_info_ ;};::testing ::TestInfo *const PerformanceBasicPollableDispatch_regularPollSet_Test ::test_info_ =::testing ::internal ::MakeAndRegisterTestInfo ("PerformanceBasicPollableDispatch","regularPollSet",nullptr ,nullptr ,::testing ::internal ::CodeLocation ("/home/misha/nika/nx_open/libs/nx_network/unit_tests/src/aio/basic_pollable_ut.cpp",331),(::testing ::internal ::GetTypeId &lt;PerformanceBasicPollableDispatch &gt;()),::testing ::internal ::SuiteApiResolver &lt;PerformanceBasicPollableDispatch &gt;::GetSetUpCaseOrSuite ("/home/misha/nika/nx_open/libs/nx_network/unit_tests/src/aio/basic_pollable_ut.cpp",331),::testing ::internal ::SuiteApiResolver &lt;PerformanceBasicPollableDispatch &gt;::GetTearDownCaseOrSuite ("/home/misha/nika/nx_open/libs/nx_network/unit_tests/src/aio/basic_pollable_ut.cpp",331),new ::testing ::internal ::TestFactoryImpl &lt;PerformanceBasicPollableDispatch_regularPollSet_Test &gt;);void PerformanceBasicPollableDispatch_regularPollSet_Test ::TestBody ()</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>331</integer>
					</dict>
					<key>name</key>
					<string>TEST_F(PerformanceBasicPollableDispatch, regularPollSet)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>static_assert (sizeof ("PerformanceBasicPollableDispatch")&gt;1,"test_suite_name must not be empty");static_assert (sizeof ("regularPollSet")&gt;1,"test_name must not be empty");class PerformanceBasicPollableDispatch_regularPollSet_Test :public PerformanceBasicPollableDispatch {public :PerformanceBasicPollableDispatch_regularPollSet_Test ()=default ;~PerformanceBasicPollableDispatch_regularPollSet_Test ()override =default ;PerformanceBasicPollableDispatch_regularPollSet_Test (const PerformanceBasicPollableDispatch_regularPollSet_Test &amp;)=delete ;PerformanceBasicPollableDispatch_regularPollSet_Test &amp;operator =(const PerformanceBasicPollableDispatch_regularPollSet_Test &amp;)=delete ;PerformanceBasicPollableDispatch_regularPollSet_Test (PerformanceBasicPollableDispatch_regularPollSet_Test &amp;&amp;)noexcept =delete ;PerformanceBasicPollableDispatch_regularPollSet_Test &amp;operator =(PerformanceBasicPollableDispatch_regularPollSet_Test &amp;&amp;)noexcept =delete ;private :void TestBody ()override ;[[maybe_unused ]]static ::testing ::TestInfo *const test_info_ ;};::testing ::TestInfo *const PerformanceBasicPollableDispatch_regularPollSet_Test ::test_info_ =::testing ::internal ::MakeAndRegisterTestInfo ("PerformanceBasicPollableDispatch","regularPollSet",nullptr ,nullptr ,::testing ::internal ::CodeLocation ("/home/misha/nika/nx_open/libs/nx_network/unit_tests/src/aio/basic_pollable_ut.cpp",331),(::testing ::internal ::GetTypeId &lt;PerformanceBasicPollableDispatch &gt;()),::testing ::internal ::SuiteApiResolver &lt;PerformanceBasicPollableDispatch &gt;::GetSetUpCaseOrSuite ("/home/misha/nika/nx_open/libs/nx_network/unit_tests/src/aio/basic_pollable_ut.cpp",331),::testing ::internal ::SuiteApiResolver &lt;PerformanceBasicPollableDispatch &gt;::GetTearDownCaseOrSuite ("/home/misha/nika/nx_open/libs/nx_network/unit_tests/src/aio/basic_pollable_ut.cpp",331),new ::testing ::internal ::TestFactoryImpl &lt;PerformanceBasicPollableDispatch_regularPollSet_Test &gt;);void PerformanceBasicPollableDispatch_regularPollSet_Test ::TestBody ()</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>331</integer>
					</dict>
					<key>name</key>
					<string>TEST_F(PerformanceBasicPollableDispatch, regularPollSet)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>315</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>38</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>315</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>315</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>38</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>315</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>30</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>315</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>38</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>315</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>30</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>30</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>30</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>30</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>59</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>59</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>30</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>211</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>61</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>18</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>61</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>59</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>59</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>62</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>62</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>61</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>18</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>61</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>62</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>62</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>62</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>62</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>29</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>29</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>62</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>62</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>31</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>31</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>29</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>29</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>13</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>31</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>29</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>31</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>31</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>31</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>13</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>32</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>32</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>32</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>13</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>31</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>29</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>31</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>331</integer>
					</dict>
					<key>message</key>
					<string>Calling implicit destructor for 'PerformanceBasicPollableDispatch'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>331</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>331</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>331</integer>
					</dict>
					<key>message</key>
					<string>Calling implicit destructor for 'PerformanceBasicPollable&lt;void (nx::network::aio::BasicPollable::*)(nx::MoveOnlyFunc&lt;void ()&gt;)&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>331</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>331</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>331</integer>
					</dict>
					<key>message</key>
					<string>Calling '~BasicPollable'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>331</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>331</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>59</integer>
					</dict>
					<key>message</key>
					<string>Entered call from destructor for 'PerformanceBasicPollable&lt;void (nx::network::aio::BasicPollable::*)(nx::MoveOnlyFunc&lt;void ()&gt;)&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>59</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>59</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>62</integer>
					</dict>
					<key>message</key>
					<string>Calling '~TestPollable'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>62</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>62</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>29</integer>
					</dict>
					<key>message</key>
					<string>Entered call from '~BasicPollable'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>29</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>29</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>13</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>31</integer>
					</dict>
					<key>message</key>
					<string>Assuming the condition is true</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>13</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>31</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>31</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>31</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>13</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>32</integer>
					</dict>
					<key>message</key>
					<string>Call to virtual method 'TestPollable::stopWhileInAioThread' during destruction bypasses virtual dispatch</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>13</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>32</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>34</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>32</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
	</array>
	<key>files</key>
	<array>
		<string>/home/misha/nika/nx_open/libs/nx_network/unit_tests/src/aio/basic_pollable_ut.cpp</string>
	</array>
	<key>metadata</key>
	<dict>
		<key>analyzer</key>
		<dict>
			<key>name</key>
			<string>clangsa</string>
		</dict>
		<key>generated_by</key>
		<dict>
			<key>name</key>
			<string>CodeChecker</string>
			<key>version</key>
			<string>6.21.0</string>
		</dict>
	</dict>
</dict>
</plist>
