<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>diagnostics</key>
	<array>
		<dict>
			<key>category</key>
			<string>cppcoreguidelines</string>
			<key>check_name</key>
			<string>cppcoreguidelines-special-member-functions</string>
			<key>description</key>
			<string>class 'shared_state_base' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>06d7cb7e7a724a64ab4c9415906e0752</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>7</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>96</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>7</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>96</integer>
					</dict>
					<key>message</key>
					<string>class 'shared_state_base' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>cert</string>
			<key>check_name</key>
			<string>cert-err09-cpp</string>
			<key>description</key>
			<string>catch handler catches by value; should catch by reference instead</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>d3816bf04ffa5a33e026a5264fa5c91c</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>14</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>327</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>14</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>327</integer>
					</dict>
					<key>message</key>
					<string>catch handler catches by value; should catch by reference instead</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>cppcoreguidelines</string>
			<key>check_name</key>
			<string>cppcoreguidelines-special-member-functions</string>
			<key>description</key>
			<string>class 'future' defines a copy constructor, a copy assignment operator, a move constructor and a move assignment operator but does not define a destructor</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>8779374f785b0abfe8735b8357b16580</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>7</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>336</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>7</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>336</integer>
					</dict>
					<key>message</key>
					<string>class 'future' defines a copy constructor, a copy assignment operator, a move constructor and a move assignment operator but does not define a destructor</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>performance</string>
			<key>check_name</key>
			<string>performance-noexcept-move-constructor</string>
			<key>description</key>
			<string>move constructors should be marked noexcept</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>f38a760c247424bae959fa048f3d313e</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>354</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>354</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>354</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>354</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>354</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>354</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>354</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>354</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>354</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>354</integer>
					</dict>
					<key>message</key>
					<string>355 |     : state_(std::move(other.state_)) {} (fixit)</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>7</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>354</integer>
					</dict>
					<key>message</key>
					<string>|  noexcept (fixit)</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>354</integer>
					</dict>
					<key>message</key>
					<string>move constructors should be marked noexcept</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>performance</string>
			<key>check_name</key>
			<string>performance-noexcept-move-constructor</string>
			<key>description</key>
			<string>move assignment operators should be marked noexcept</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>74a837099774838fbcea62291a0273ec</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>14</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>357</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>14</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>357</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>14</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>357</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>357</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>357</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>7</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>357</integer>
					</dict>
					<key>message</key>
					<string>|                                              noexcept (fixit)</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>14</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>357</integer>
					</dict>
					<key>message</key>
					<string>move assignment operators should be marked noexcept</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>cppcoreguidelines</string>
			<key>check_name</key>
			<string>cppcoreguidelines-special-member-functions</string>
			<key>description</key>
			<string>class 'promise' defines a non-default destructor, a move constructor and a move assignment operator but does not define a copy constructor or a copy assignment operator</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>534f584ee0b87f7809645f87aefac14e</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>7</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>740</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>7</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>740</integer>
					</dict>
					<key>message</key>
					<string>class 'promise' defines a non-default destructor, a move constructor and a move assignment operator but does not define a copy constructor or a copy assignment operator</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>performance</string>
			<key>check_name</key>
			<string>performance-noexcept-move-constructor</string>
			<key>description</key>
			<string>move constructors should be marked noexcept</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>bf3a77dd68274243510e002bfee7ccbc</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>745</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>745</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>745</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>745</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>745</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>745</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>3</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>745</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>745</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>745</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>745</integer>
					</dict>
					<key>message</key>
					<string>746 |     : state_(std::move(other.state_)) {} (fixit)</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>7</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>745</integer>
					</dict>
					<key>message</key>
					<string>|  noexcept (fixit)</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>745</integer>
					</dict>
					<key>message</key>
					<string>move constructors should be marked noexcept</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>performance</string>
			<key>check_name</key>
			<string>performance-noexcept-move-constructor</string>
			<key>description</key>
			<string>move assignment operators should be marked noexcept</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>07a5acaf05a676030a9fbd4a09a013db</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>12</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>748</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>748</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>748</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>748</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>748</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>7</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>748</integer>
					</dict>
					<key>message</key>
					<string>|                                          noexcept (fixit)</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>12</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>748</integer>
					</dict>
					<key>message</key>
					<string>move assignment operators should be marked noexcept</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>bugprone</string>
			<key>check_name</key>
			<string>bugprone-move-forwarding-reference</string>
			<key>description</key>
			<string>forwarding reference passed to std::move(), which may unexpectedly cause lvalues to be moved; use std::forward() instead</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>d970266af91a247063cca8426139ec16</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>34</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>1007</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>34</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>1007</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>34</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>1007</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>1007</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>1007</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>7</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>1007</integer>
					</dict>
					<key>message</key>
					<string>|                                  std::forward&lt;Future&gt; (fixit)</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>34</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>1007</integer>
					</dict>
					<key>message</key>
					<string>forwarding reference passed to std::move(), which may unexpectedly cause lvalues to be moved; use std::forward() instead</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>bugprone</string>
			<key>check_name</key>
			<string>bugprone-move-forwarding-reference</string>
			<key>description</key>
			<string>forwarding reference passed to std::move(), which may unexpectedly cause lvalues to be moved; use std::forward() instead</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>713cc0d10495a311134dff6fd3fb0c54</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>43</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>1161</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>43</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>1161</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>43</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>1161</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>1161</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>7</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>1161</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>7</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>1161</integer>
					</dict>
					<key>message</key>
					<string>|                                           std::forward&lt;FirstFuture&gt; (fixit)</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>43</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>1161</integer>
					</dict>
					<key>message</key>
					<string>forwarding reference passed to std::move(), which may unexpectedly cause lvalues to be moved; use std::forward() instead</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>cppcoreguidelines</string>
			<key>check_name</key>
			<string>cppcoreguidelines-special-member-functions</string>
			<key>description</key>
			<string>class 'movable_func' defines a copy constructor, a copy assignment operator, a move constructor and a move assignment operator but does not define a destructor</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>5cc4725293c1191c525aaf86394fe62f</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>7</integer>
				<key>file</key>
				<integer>1</integer>
				<key>line</key>
				<integer>17</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>7</integer>
						<key>file</key>
						<integer>1</integer>
						<key>line</key>
						<integer>17</integer>
					</dict>
					<key>message</key>
					<string>class 'movable_func' defines a copy constructor, a copy assignment operator, a move constructor and a move assignment operator but does not define a destructor</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>cppcoreguidelines</string>
			<key>check_name</key>
			<string>cppcoreguidelines-special-member-functions</string>
			<key>description</key>
			<string>class 'base_holder' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>67a1e894cb7f2b65a98a560f5f034b39</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>10</integer>
				<key>file</key>
				<integer>1</integer>
				<key>line</key>
				<integer>19</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>10</integer>
						<key>file</key>
						<integer>1</integer>
						<key>line</key>
						<integer>19</integer>
					</dict>
					<key>message</key>
					<string>class 'base_holder' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>files</key>
	<array>
		<string>/home/misha/nika/nx_open/libs/nx_utils/src/nx/utils/thread/cf/cfuture.h</string>
		<string>/home/misha/nika/nx_open/libs/nx_utils/src/nx/utils/thread/cf/common.h</string>
	</array>
	<key>metadata</key>
	<dict>
		<key>analyzer</key>
		<dict>
			<key>name</key>
			<string>clang-tidy</string>
		</dict>
		<key>generated_by</key>
		<dict>
			<key>name</key>
			<string>CodeChecker</string>
			<key>version</key>
			<string>6.21.0</string>
		</dict>
	</dict>
</dict>
</plist>
