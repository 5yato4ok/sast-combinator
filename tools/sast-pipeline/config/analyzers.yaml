analyzers:
  - name: cppcheck
    type: simple
    image: sast-cppcheck
    language: [ "cpp" ]
    time_class: fast
    # The format of the output produced by this analyzer.
    # Supported values are:
    #   - sarif      → results are saved in SARIF (JSON) format
    #   - codechecker → results are saved in CodeChecker unified JSON
    #
    # This field is consumed by defectdojo_api when determining how to
    # import the report into DefectDojo. See tools/sast‑pipeline/defectdojo_api.py
    output_type: "SARIF"

  - name: devskim
    type: simple
    image: sast-devskim
    time_class: medium
    output_type: "SARIF"
    language: [ "c", "objc","cpp","csharp","cobol","go","java", "javascript", "typescript", "php", "powershell", "python","ruby","rust","sql","swift" ]

  - name: flawfinder
    type: simple
    image: sast-flawfinder
    time_class: fast
    output_type: "SARIF"
    language: [ "c", "cpp" ]

  - name: snyk
    type: simple
    image: sast-snyk
    time_class: medium
    output_type: "SARIF"
    language: [ "c", "cpp", "go", "elixir", "java", "kotlin", "javascript", "dotnet", "php", "python","ruby", "rust", "scala","swift","objc","typescript" ]
    env:
      - SNYK_TOKEN

  - name: semgrep
    type: simple
    image: sast-semgrep
    enabled: true
    time_class: slow
    output_type: "SARIF"
    language: [ "csharp", "go", "java","javascript","kotlin","python","typescript","c", "cpp","jsx", "ruby", "scala", "swift", "rust","php","terraform", ]
    env:
      - SEMGREP_APP_TOKEN

  - name: codechecker
    type: builder
    image: sast-builder-codechecker
    time_class: slow
    enabled: true
    output_type: "Codechecker Report native"
    language: [ "c", "cpp" ]
    env:
      - COMPILE_COMMANDS_PATH
      - COMPILER_PATH

  - name: horusec
    type: simple
    image: horusec-analyzer
    time_class: medium
    enabled: true
    output_type: "SARIF"
    volume: "'/var/run/docker.sock': '/var/run/docker.sock'" #TODO: add check volume exists
    language: [ "python","terraform", "c", "php", "csharp", "javascript", "typescript", "go", "java", "kotlin", "ruby" ]

  - name: codeql
    language_specific_containers: true
    enabled: true
    output_type: "SARIF"
    env:
      - JOBS
    language: [ "python", "cpp", "c", "csharp", "javascript", "typescript", "java", "kotlin", "go", "ruby", "swift" , "rust"]
    configuration:
      - python:
          image: codeql-python
          dockerfile_path: "/app/Dockerfiles/codeql/python/"
          result_file: "codeql_python.sarif"
      - cpp:
          enabled: false
          type: builder
          image: codeql-c-cpp
          dockerfile_path: "/app/Dockerfiles/codeql/cpp/"
          result_file: "codeql_cpp.sarif"
      - c:
          inherits: cpp
      - csharp:
          image: codeql-csharp
          dockerfile_path: "/app/Dockerfiles/codeql/csharp/"
          result_file: "codeql_csharp.sarif"
          type: builder
          env:
            - DOTNET_PATH
            - LIB_PATH
            - JOBS

      - javascript:
          image: codeql-javascript-typescript
          dockerfile_path: "/app/Dockerfiles/codeql/javascript/"
          result_file: "codeql_javascript.sarif"
      - typescript:
          inherits: javascript
      - java:
          image: codeql-java-kotlin
          dockerfile_path: "/app/Dockerfiles/codeql/java/"
          result_file: "codeql_java.sarif"
      - kotlin:
          inherits: java
      - go:
          image: codeql-go
          dockerfile_path: "/app/Dockerfiles/codeql/go/"
          result_file: "codeql_go.sarif"
      - ruby:
          image: codeql-ruby
          dockerfile_path: "/app/Dockerfiles/codeql/ruby/"
          result_file: "codeql_ruby.sarif"
      - swift:
          image: codeql-swift
          dockerfile_path: "/app/Dockerfiles/codeql/swift/"
          result_file: "codeql_swift.sarif"

  - name: bearer
    type: simple
    image: bearer-analyzer
    time_class: medium
    enabled: true
    output_type: "SARIF"
    language: [ "python", "javascript", "typescript", "ruby", "php", "java" ]

  - name: sonarqube
    type: simple
    image: sonarqube-analyzer
    time_class: medium
    enabled: false
    output_type: sonarqube
    language: [ "python", "c", "cpp", "csharp", "javascript", "typescript", "java", "go" ]
    env:
      - SONAR_HOST_URL
      - SONAR_TOKEN
      - SONAR_PROJECT_KEY
      - SONAR_ORGANIZATION
      - SONAR_SCANNER_OPTS
