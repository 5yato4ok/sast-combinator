<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>diagnostics</key>
	<array>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>core.UndefinedBinaryOperatorResult</string>
			<key>description</key>
			<string>The left operand of '&lt;' is a garbage value</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>a783375dc9c83626097dbe2379075040</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>61</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>353</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>352</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>352</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>57</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>59</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>61</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>61</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>57</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>59</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>353</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>352</integer>
					</dict>
					<key>message</key>
					<string>'tmp' declared without an initial value</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>352</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>15</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>352</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>13</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>353</integer>
					</dict>
					<key>message</key>
					<string>Assuming overflow</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>13</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>353</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>46</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>353</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>61</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>353</integer>
					</dict>
					<key>message</key>
					<string>The left operand of '&lt;' is a garbage value</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>57</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>353</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>59</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>353</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>core.UndefinedBinaryOperatorResult</string>
			<key>description</key>
			<string>The left operand of '&lt;' is a garbage value</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>e3c92982ce0cc2d0efda8a530f136bae</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>61</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>372</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>371</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>11</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>371</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>10</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>57</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>59</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>61</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>61</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>57</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>59</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>372</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>371</integer>
					</dict>
					<key>message</key>
					<string>'tmp' declared without an initial value</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>371</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>15</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>371</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>13</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>372</integer>
					</dict>
					<key>message</key>
					<string>Assuming overflow</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>13</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>372</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>46</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>372</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>61</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>372</integer>
					</dict>
					<key>message</key>
					<string>The left operand of '&lt;' is a garbage value</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>57</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>372</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>59</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>372</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>category</key>
			<string>Logic error</string>
			<key>check_name</key>
			<string>core.CallAndMessage</string>
			<key>description</key>
			<string>Called C++ object pointer is null</string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>f02942206c9381bfc7c24ce2a4995649</string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>13</integer>
				<key>file</key>
				<integer>5</integer>
				<key>line</key>
				<integer>23</integer>
			</dict>
			<key>macro_expansions</key>
			<array>
				<dict>
					<key>expansion</key>
					<string>([result =(target )||::nx ::assertFailure (false ,"/home/misha/nika/nx_open/libs/nx_fusion/src/nx/fusion/serialization/serialization.h",337,"target",::nx ::format ())](){return result ;}())</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>9</integer>
						<key>file</key>
						<integer>4</integer>
						<key>line</key>
						<integer>337</integer>
					</dict>
					<key>name</key>
					<string>NX_ASSERT(target)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>template &lt;class T &gt;struct QnFusionBinding ;template &lt;&gt;struct QnFusionBinding &lt;Title &gt;{template &lt;int n ,int dummy =0&gt;struct at_c ;template &lt;class T &gt;struct at :at_c &lt;T ::value &gt;{};struct size {enum {value =6};};template &lt;int dummy &gt;struct at_c &lt;0,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::timestampUs )result_type ;result_type operator ()()const {return &amp;Title ::timestampUs ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::timestampUs )result_type ;result_type operator ()()const {return &amp;Title ::timestampUs ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""timestampUs")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "timestampUs";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""timestampUs")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,0&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,0&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;1,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::rect )result_type ;result_type operator ()()const {return &amp;Title ::rect ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::rect )result_type ;result_type operator ()()const {return &amp;Title ::rect ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""rect")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "rect";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""rect")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,1&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,1&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;2,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::streamIndex )result_type ;result_type operator ()()const {return &amp;Title ::streamIndex ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::streamIndex )result_type ;result_type operator ()()const {return &amp;Title ::streamIndex ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""streamIndex")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "streamIndex";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""streamIndex")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,2&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,2&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;3,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::image )result_type ;result_type operator ()()const {return &amp;Title ::image ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::image )result_type ;result_type operator ()()const {return &amp;Title ::image ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""image")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "image";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""image")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,3&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,3&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;4,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::text )result_type ;result_type operator ()()const {return &amp;Title ::text ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::text )result_type ;result_type operator ()()const {return &amp;Title ::text ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""text")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "text";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""text")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,4&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,4&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;5,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::hasImage )result_type ;result_type operator ()()const {return &amp;Title ::hasImage ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::hasImage )result_type ;result_type operator ()()const {return &amp;Title ::hasImage ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""hasImage")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "hasImage";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""hasImage")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,5&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,5&gt;());}};};};};template &lt;class T ,class Visitor &gt;static bool visit_members (T &amp;&amp;value ,Visitor &amp;&amp;visitor ){if (!QnFusionDetail ::safe_operator_call (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;typename at_c &lt;0&gt;::type &gt;(),QnFusion ::start_tag ()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;0&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;1&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;2&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;3&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;4&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;5&gt;::type &gt;()))return false ;if (!QnFusionDetail ::safe_operator_call (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;typename at_c &lt;0&gt;::type &gt;(),QnFusion ::end_tag ()))return false ;return true ;}};template &lt;class Visitor &gt;bool visit_members (const Title &amp;value ,Visitor &amp;&amp;visitor ){return QnFusionBinding &lt;Title &gt;::visit_members (value ,std ::forward &lt;Visitor &gt;(visitor ));}template &lt;class Visitor &gt;bool visit_members (Title &amp;value ,Visitor &amp;&amp;visitor ){return QnFusionBinding &lt;Title &gt;::visit_members (value ,std ::forward &lt;Visitor &gt;(visitor ));}[[maybe_unused ]]void serialize (QnJsonContext *ctx ,const Title &amp;value ,QJsonValue *target ){QnFusion ::serialize (ctx ,value ,target );}[[maybe_unused ]]bool deserialize (QnJsonContext *ctx ,const QJsonValue &amp;value ,Title *target ){return QnFusion ::deserialize (ctx ,value ,target );}[[maybe_unused ]]void serialize (const Title &amp;value ,QnUbjsonWriter &lt;QByteArray &gt;*stream ){QnFusion ::serialize (value ,&amp;stream );}[[maybe_unused ]]bool deserialize (QnUbjsonReader &lt;QByteArray &gt;*stream ,Title *target ){return QnFusion ::deserialize (stream ,target );}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>6</integer>
						<key>line</key>
						<integer>112</integer>
					</dict>
					<key>name</key>
					<string>QN_FUSION_ADAPT_STRUCT_FUNCTIONS(Title, (json)(ubjson), Title_analytics_storage_Fields)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>template &lt;class T &gt;struct QnFusionBinding ;template &lt;&gt;struct QnFusionBinding &lt;Title &gt;{template &lt;int n ,int dummy =0&gt;struct at_c ;template &lt;class T &gt;struct at :at_c &lt;T ::value &gt;{};struct size {enum {value =6};};template &lt;int dummy &gt;struct at_c &lt;0,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::timestampUs )result_type ;result_type operator ()()const {return &amp;Title ::timestampUs ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::timestampUs )result_type ;result_type operator ()()const {return &amp;Title ::timestampUs ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""timestampUs")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "timestampUs";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""timestampUs")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,0&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,0&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;1,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::rect )result_type ;result_type operator ()()const {return &amp;Title ::rect ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::rect )result_type ;result_type operator ()()const {return &amp;Title ::rect ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""rect")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "rect";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""rect")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,1&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,1&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;2,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::streamIndex )result_type ;result_type operator ()()const {return &amp;Title ::streamIndex ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::streamIndex )result_type ;result_type operator ()()const {return &amp;Title ::streamIndex ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""streamIndex")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "streamIndex";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""streamIndex")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,2&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,2&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;3,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::image )result_type ;result_type operator ()()const {return &amp;Title ::image ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::image )result_type ;result_type operator ()()const {return &amp;Title ::image ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""image")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "image";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""image")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,3&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,3&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;4,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::text )result_type ;result_type operator ()()const {return &amp;Title ::text ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::text )result_type ;result_type operator ()()const {return &amp;Title ::text ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""text")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "text";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""text")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,4&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,4&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;5,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::hasImage )result_type ;result_type operator ()()const {return &amp;Title ::hasImage ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::hasImage )result_type ;result_type operator ()()const {return &amp;Title ::hasImage ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""hasImage")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "hasImage";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""hasImage")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,5&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,5&gt;());}};};};};template &lt;class T ,class Visitor &gt;static bool visit_members (T &amp;&amp;value ,Visitor &amp;&amp;visitor ){if (!QnFusionDetail ::safe_operator_call (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;typename at_c &lt;0&gt;::type &gt;(),QnFusion ::start_tag ()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;0&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;1&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;2&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;3&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;4&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;5&gt;::type &gt;()))return false ;if (!QnFusionDetail ::safe_operator_call (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;typename at_c &lt;0&gt;::type &gt;(),QnFusion ::end_tag ()))return false ;return true ;}};template &lt;class Visitor &gt;bool visit_members (const Title &amp;value ,Visitor &amp;&amp;visitor ){return QnFusionBinding &lt;Title &gt;::visit_members (value ,std ::forward &lt;Visitor &gt;(visitor ));}template &lt;class Visitor &gt;bool visit_members (Title &amp;value ,Visitor &amp;&amp;visitor ){return QnFusionBinding &lt;Title &gt;::visit_members (value ,std ::forward &lt;Visitor &gt;(visitor ));}[[maybe_unused ]]void serialize (QnJsonContext *ctx ,const Title &amp;value ,QJsonValue *target ){QnFusion ::serialize (ctx ,value ,target );}[[maybe_unused ]]bool deserialize (QnJsonContext *ctx ,const QJsonValue &amp;value ,Title *target ){return QnFusion ::deserialize (ctx ,value ,target );}[[maybe_unused ]]void serialize (const Title &amp;value ,QnUbjsonWriter &lt;QByteArray &gt;*stream ){QnFusion ::serialize (value ,&amp;stream );}[[maybe_unused ]]bool deserialize (QnUbjsonReader &lt;QByteArray &gt;*stream ,Title *target ){return QnFusion ::deserialize (stream ,target );}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>6</integer>
						<key>line</key>
						<integer>112</integer>
					</dict>
					<key>name</key>
					<string>QN_FUSION_ADAPT_STRUCT_FUNCTIONS(Title, (json)(ubjson), Title_analytics_storage_Fields)</string>
				</dict>
				<dict>
					<key>expansion</key>
					<string>template &lt;class T &gt;struct QnFusionBinding ;template &lt;&gt;struct QnFusionBinding &lt;Title &gt;{template &lt;int n ,int dummy =0&gt;struct at_c ;template &lt;class T &gt;struct at :at_c &lt;T ::value &gt;{};struct size {enum {value =6};};template &lt;int dummy &gt;struct at_c &lt;0,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::timestampUs )result_type ;result_type operator ()()const {return &amp;Title ::timestampUs ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::timestampUs )result_type ;result_type operator ()()const {return &amp;Title ::timestampUs ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""timestampUs")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "timestampUs";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""timestampUs")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,0&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,0&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;1,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::rect )result_type ;result_type operator ()()const {return &amp;Title ::rect ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::rect )result_type ;result_type operator ()()const {return &amp;Title ::rect ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""rect")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "rect";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""rect")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,1&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,1&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;2,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::streamIndex )result_type ;result_type operator ()()const {return &amp;Title ::streamIndex ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::streamIndex )result_type ;result_type operator ()()const {return &amp;Title ::streamIndex ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""streamIndex")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "streamIndex";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""streamIndex")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,2&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,2&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;3,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::image )result_type ;result_type operator ()()const {return &amp;Title ::image ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::image )result_type ;result_type operator ()()const {return &amp;Title ::image ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""image")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "image";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""image")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,3&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,3&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;4,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::text )result_type ;result_type operator ()()const {return &amp;Title ::text ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::text )result_type ;result_type operator ()()const {return &amp;Title ::text ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""text")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "text";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""text")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,4&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,4&gt;());}};};};};template &lt;int dummy &gt;struct at_c &lt;5,dummy &gt;{struct type {typedef type access_type ;template &lt;class Key ,class Default &gt;struct at {typedef Default type ;};struct size {enum {value =10};};template &lt;class Default &gt;struct at &lt;QnFusion ::object_declval_type ,Default &gt;{struct type {typedef decltype (std ::declval &lt;Title &gt;())result_type ;result_type operator ()()const {return std ::declval &lt;Title &gt;();}};};template &lt;class Default &gt;struct at &lt;QnFusion ::classname_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""Title")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_classname_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "Title";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_count_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,6&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,6&gt;());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::getter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::hasImage )result_type ;result_type operator ()()const {return &amp;Title ::hasImage ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_type ,Default &gt;{struct type {typedef decltype (&amp;Title ::hasImage )result_type ;result_type operator ()()const {return &amp;Title ::hasImage ;}};};template &lt;class Default &gt;struct at &lt;QnFusion ::setter_tag_type ,Default &gt;{struct type {typedef decltype (QnFusionDetail ::make_access_setter_category (access_type ()))result_type ;result_type operator ()()const {return QnFusionDetail ::make_access_setter_category (access_type ());}};};template &lt;class Default &gt;struct at &lt;QnFusion ::name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u"""hasImage")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::c_name_type ,Default &gt;{struct type {typedef const char *result_type ;result_type operator ()()const {return "hasImage";}};};template &lt;class Default &gt;struct at &lt;QnFusion ::sql_placeholder_name_type ,Default &gt;{struct type {typedef QString result_type ;result_type operator ()()const {return (QString (QtPrivate ::qMakeStringPrivate (u""":""hasImage")));}};};template &lt;class Default &gt;struct at &lt;QnFusion ::member_index_type ,Default &gt;{struct type {typedef decltype ((std ::integral_constant &lt;int ,5&gt;()))result_type ;result_type operator ()()const {return (std ::integral_constant &lt;int ,5&gt;());}};};};};template &lt;class T ,class Visitor &gt;static bool visit_members (T &amp;&amp;value ,Visitor &amp;&amp;visitor ){if (!QnFusionDetail ::safe_operator_call (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;typename at_c &lt;0&gt;::type &gt;(),QnFusion ::start_tag ()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;0&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;1&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;2&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;3&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;4&gt;::type &gt;()))return false ;if (!QnFusionDetail ::dispatch_visit (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;at_c &lt;5&gt;::type &gt;()))return false ;if (!QnFusionDetail ::safe_operator_call (std ::forward &lt;Visitor &gt;(visitor ),std ::forward &lt;T &gt;(value ),QnFusion ::AccessAdaptor &lt;typename at_c &lt;0&gt;::type &gt;(),QnFusion ::end_tag ()))return false ;return true ;}};template &lt;class Visitor &gt;bool visit_members (const Title &amp;value ,Visitor &amp;&amp;visitor ){return QnFusionBinding &lt;Title &gt;::visit_members (value ,std ::forward &lt;Visitor &gt;(visitor ));}template &lt;class Visitor &gt;bool visit_members (Title &amp;value ,Visitor &amp;&amp;visitor ){return QnFusionBinding &lt;Title &gt;::visit_members (value ,std ::forward &lt;Visitor &gt;(visitor ));}[[maybe_unused ]]void serialize (QnJsonContext *ctx ,const Title &amp;value ,QJsonValue *target ){QnFusion ::serialize (ctx ,value ,target );}[[maybe_unused ]]bool deserialize (QnJsonContext *ctx ,const QJsonValue &amp;value ,Title *target ){return QnFusion ::deserialize (ctx ,value ,target );}[[maybe_unused ]]void serialize (const Title &amp;value ,QnUbjsonWriter &lt;QByteArray &gt;*stream ){QnFusion ::serialize (value ,&amp;stream );}[[maybe_unused ]]bool deserialize (QnUbjsonReader &lt;QByteArray &gt;*stream ,Title *target ){return QnFusion ::deserialize (stream ,target );}</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>6</integer>
						<key>line</key>
						<integer>112</integer>
					</dict>
					<key>name</key>
					<string>QN_FUSION_ADAPT_STRUCT_FUNCTIONS(Title, (json)(ubjson), Title_analytics_storage_Fields)</string>
				</dict>
			</array>
			<key>path</key>
			<array>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>4</integer>
									<key>line</key>
									<integer>252</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>17</integer>
									<key>file</key>
									<integer>4</integer>
									<key>line</key>
									<integer>252</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>4</integer>
									<key>line</key>
									<integer>251</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>8</integer>
									<key>file</key>
									<integer>4</integer>
									<key>line</key>
									<integer>251</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>45</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>8</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>45</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>4</integer>
									<key>line</key>
									<integer>252</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>17</integer>
									<key>file</key>
									<integer>4</integer>
									<key>line</key>
									<integer>252</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>45</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>8</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>45</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>62</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>62</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>54</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>60</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>62</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>62</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>16</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>28</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>16</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>54</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>60</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>22</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>17</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>27</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>17</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>16</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>28</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>16</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>13</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>17</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>17</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>22</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>17</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>27</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>17</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>54</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>60</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>13</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>17</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>17</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>54</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>60</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>50</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>50</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>49</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>52</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>8</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>52</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>50</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>3</integer>
									<key>line</key>
									<integer>50</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>53</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>14</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>53</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>52</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>8</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>52</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>53</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>29</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>53</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>53</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>14</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>53</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>27</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>8</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>27</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>53</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>29</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>53</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>28</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>14</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>28</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>27</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>8</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>27</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>28</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>28</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>28</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>28</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>14</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>28</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>84</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>8</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>84</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>28</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>28</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>28</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>85</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>14</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>85</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>5</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>84</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>8</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>84</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>85</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>22</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>85</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>85</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>14</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>85</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>21</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>21</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>85</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>22</integer>
									<key>file</key>
									<integer>2</integer>
									<key>line</key>
									<integer>85</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>13</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>23</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>20</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>23</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>9</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>21</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>12</integer>
									<key>file</key>
									<integer>5</integer>
									<key>line</key>
									<integer>21</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>9</integer>
						<key>file</key>
						<integer>4</integer>
						<key>line</key>
						<integer>337</integer>
					</dict>
					<key>message</key>
					<string>Assuming 'target' is null</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>9</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>337</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>25</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>337</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>9</integer>
						<key>file</key>
						<integer>4</integer>
						<key>line</key>
						<integer>338</integer>
					</dict>
					<key>message</key>
					<string>Calling 'serialize_internal&lt;nx::analytics::db::Title, QnUbjsonWriter&lt;QByteArray&gt;&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>9</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>338</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>64</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>338</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>4</integer>
						<key>line</key>
						<integer>251</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'serialize&lt;nx::analytics::db::Title, QnUbjsonWriter&lt;QByteArray&gt;&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>251</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>251</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>9</integer>
						<key>file</key>
						<integer>4</integer>
						<key>line</key>
						<integer>252</integer>
					</dict>
					<key>message</key>
					<string>Calling 'serialize'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>9</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>252</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>32</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>252</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>6</integer>
						<key>line</key>
						<integer>112</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'serialize_internal&lt;nx::analytics::db::Title, QnUbjsonWriter&lt;QByteArray&gt;&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>6</integer>
						<key>line</key>
						<integer>112</integer>
					</dict>
					<key>message</key>
					<string>Calling 'serialize&lt;nx::analytics::db::Title, QnUbjsonWriter&lt;QByteArray&gt; *&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>87</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>3</integer>
						<key>line</key>
						<integer>45</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'serialize'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>3</integer>
								<key>line</key>
								<integer>45</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>3</integer>
								<key>line</key>
								<integer>45</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>62</integer>
						<key>file</key>
						<integer>3</integer>
						<key>line</key>
						<integer>49</integer>
					</dict>
					<key>message</key>
					<string>Passing null pointer value via 1st parameter 'stream'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>62</integer>
								<key>file</key>
								<integer>3</integer>
								<key>line</key>
								<integer>49</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>68</integer>
								<key>file</key>
								<integer>3</integer>
								<key>line</key>
								<integer>49</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>54</integer>
						<key>file</key>
						<integer>3</integer>
						<key>line</key>
						<integer>49</integer>
					</dict>
					<key>message</key>
					<string>Calling constructor for 'SerializationVisitor&lt;QByteArray&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>54</integer>
								<key>file</key>
								<integer>3</integer>
								<key>line</key>
								<integer>49</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>69</integer>
								<key>file</key>
								<integer>3</integer>
								<key>line</key>
								<integer>49</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>9</integer>
						<key>file</key>
						<integer>5</integer>
						<key>line</key>
						<integer>16</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'serialize&lt;nx::analytics::db::Title, QnUbjsonWriter&lt;QByteArray&gt; *&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>9</integer>
								<key>file</key>
								<integer>5</integer>
								<key>line</key>
								<integer>16</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>9</integer>
								<key>file</key>
								<integer>5</integer>
								<key>line</key>
								<integer>16</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>13</integer>
						<key>file</key>
						<integer>5</integer>
						<key>line</key>
						<integer>17</integer>
					</dict>
					<key>message</key>
					<string>Null pointer value stored to 'visitor.m_stream'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>13</integer>
								<key>file</key>
								<integer>5</integer>
								<key>line</key>
								<integer>17</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>13</integer>
								<key>file</key>
								<integer>5</integer>
								<key>line</key>
								<integer>17</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>54</integer>
						<key>file</key>
						<integer>3</integer>
						<key>line</key>
						<integer>49</integer>
					</dict>
					<key>message</key>
					<string>Returning from constructor for 'SerializationVisitor&lt;QByteArray&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>54</integer>
								<key>file</key>
								<integer>3</integer>
								<key>line</key>
								<integer>49</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>69</integer>
								<key>file</key>
								<integer>3</integer>
								<key>line</key>
								<integer>49</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>9</integer>
						<key>file</key>
						<integer>3</integer>
						<key>line</key>
						<integer>50</integer>
					</dict>
					<key>message</key>
					<string>Calling 'visit_members&lt;const nx::analytics::db::Title &amp;, QnUbjsonDetail::SerializationVisitor&lt;QByteArray&gt; &amp;&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>9</integer>
								<key>file</key>
								<integer>3</integer>
								<key>line</key>
								<integer>50</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>47</integer>
								<key>file</key>
								<integer>3</integer>
								<key>line</key>
								<integer>50</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>1</integer>
						<key>line</key>
						<integer>52</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'serialize&lt;nx::analytics::db::Title, QnUbjsonWriter&lt;QByteArray&gt; *&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>52</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>52</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>16</integer>
						<key>file</key>
						<integer>1</integer>
						<key>line</key>
						<integer>53</integer>
					</dict>
					<key>message</key>
					<string>Calling 'visit_members_internal&lt;const nx::analytics::db::Title &amp;, QnUbjsonDetail::SerializationVisitor&lt;QByteArray&gt; &amp;&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>16</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>53</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>109</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>53</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>2</integer>
						<key>line</key>
						<integer>27</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'visit_members&lt;const nx::analytics::db::Title &amp;, QnUbjsonDetail::SerializationVisitor&lt;QByteArray&gt; &amp;&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>2</integer>
								<key>line</key>
								<integer>27</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>2</integer>
								<key>line</key>
								<integer>27</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>16</integer>
						<key>file</key>
						<integer>2</integer>
						<key>line</key>
						<integer>28</integer>
					</dict>
					<key>message</key>
					<string>Calling 'visit_members&lt;QnUbjsonDetail::SerializationVisitor&lt;QByteArray&gt; &amp;&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>16</integer>
								<key>file</key>
								<integer>2</integer>
								<key>line</key>
								<integer>28</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>84</integer>
								<key>file</key>
								<integer>2</integer>
								<key>line</key>
								<integer>28</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>6</integer>
						<key>line</key>
						<integer>112</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'visit_members_internal&lt;const nx::analytics::db::Title &amp;, QnUbjsonDetail::SerializationVisitor&lt;QByteArray&gt; &amp;&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>6</integer>
						<key>line</key>
						<integer>112</integer>
					</dict>
					<key>message</key>
					<string>Calling 'QnFusionBinding::visit_members'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>87</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>6</integer>
						<key>line</key>
						<integer>112</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'visit_members&lt;QnUbjsonDetail::SerializationVisitor&lt;QByteArray&gt; &amp;&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>6</integer>
						<key>line</key>
						<integer>112</integer>
					</dict>
					<key>message</key>
					<string>Calling 'safe_operator_call&lt;QnUbjsonDetail::SerializationVisitor&lt;QByteArray&gt; &amp;, const nx::analytics::db::Title &amp;, QnFusion::AccessAdaptor&lt;nx::analytics::db::QnFusionBinding&lt;nx::analytics::db::Title&gt;::at_c&lt;0&gt;::type&gt;, QnFusion::start_tag&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>87</integer>
								<key>file</key>
								<integer>6</integer>
								<key>line</key>
								<integer>112</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>2</integer>
						<key>line</key>
						<integer>84</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'QnFusionBinding::visit_members'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>2</integer>
								<key>line</key>
								<integer>84</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>2</integer>
								<key>line</key>
								<integer>84</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>16</integer>
						<key>file</key>
						<integer>2</integer>
						<key>line</key>
						<integer>85</integer>
					</dict>
					<key>message</key>
					<string>Calling 'SerializationVisitor::operator()'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>16</integer>
								<key>file</key>
								<integer>2</integer>
								<key>line</key>
								<integer>85</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>100</integer>
								<key>file</key>
								<integer>2</integer>
								<key>line</key>
								<integer>85</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>9</integer>
						<key>file</key>
						<integer>5</integer>
						<key>line</key>
						<integer>21</integer>
					</dict>
					<key>message</key>
					<string>Entered call from 'safe_operator_call&lt;QnUbjsonDetail::SerializationVisitor&lt;QByteArray&gt; &amp;, const nx::analytics::db::Title &amp;, QnFusion::AccessAdaptor&lt;nx::analytics::db::QnFusionBinding&lt;nx::analytics::db::Title&gt;::at_c&lt;0&gt;::type&gt;, QnFusion::start_tag&gt;'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>9</integer>
								<key>file</key>
								<integer>5</integer>
								<key>line</key>
								<integer>21</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>9</integer>
								<key>file</key>
								<integer>5</integer>
								<key>line</key>
								<integer>21</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>13</integer>
						<key>file</key>
						<integer>5</integer>
						<key>line</key>
						<integer>23</integer>
					</dict>
					<key>message</key>
					<string>Called C++ object pointer is null</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>13</integer>
								<key>file</key>
								<integer>5</integer>
								<key>line</key>
								<integer>23</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>20</integer>
								<key>file</key>
								<integer>5</integer>
								<key>line</key>
								<integer>23</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
		</dict>
	</array>
	<key>files</key>
	<array>
		<string>/home/misha/nika/nx_open/build/.conan/data/ffmpeg/7.0.1/_/_/package/017a8d1e903212f7aefd62a38ad87dd6910b17fe/include/libavutil/common.h</string>
		<string>/home/misha/nika/nx_open/libs/nx_fusion/src/nx/fusion/fusion/fusion.h</string>
		<string>/home/misha/nika/nx_open/libs/nx_fusion/src/nx/fusion/fusion/fusion_detail.h</string>
		<string>/home/misha/nika/nx_open/libs/nx_fusion/src/nx/fusion/fusion/fusion_serialization.h</string>
		<string>/home/misha/nika/nx_open/libs/nx_fusion/src/nx/fusion/serialization/serialization.h</string>
		<string>/home/misha/nika/nx_open/libs/nx_fusion/src/nx/fusion/serialization/ubjson_macros.h</string>
		<string>/home/misha/nika/nx_open/vms/libs/nx_vms_common/src/analytics/db/analytics_db_types.cpp</string>
	</array>
	<key>metadata</key>
	<dict>
		<key>analyzer</key>
		<dict>
			<key>name</key>
			<string>clangsa</string>
		</dict>
		<key>generated_by</key>
		<dict>
			<key>name</key>
			<string>CodeChecker</string>
			<key>version</key>
			<string>6.21.0</string>
		</dict>
	</dict>
</dict>
</plist>
